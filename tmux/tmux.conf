#Prefix is Ctrl-a
set -g prefix C-a
bind-key C-a send-prefix
unbind-key C-b

set -sg escape-time 1
set -g base-index 1
setw -g pane-base-index 1

#Mouse works as expected
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi C-WheelUpPane send-keys  -X halfpage-up
bind -T copy-mode-vi C-WheelDownPane send-keys -X halfpage-down

setw -g monitor-activity on
set -g visual-activity off

set -g mode-keys vi
set -g history-limit 10000

# Press Esc to enter copy mode
bind Escape copy-mode
# y and p as in vim
unbind p
bind p paste-buffer
bind -T copy-mode-vi 'v' send-keys -X begin-selection
bind -T copy-mode-vi 'y' send-keys -X copy-selection
bind -T copy-mode-vi 'Space' send-keys -X halfpage-down
bind -T copy-mode-vi 'Bspace' send-keys -X halfpage-up

# Clipboard selection integration
# Enter into copy mode by pressing Ctrl-prefix Esc and then v (visual) + y to
# copy. Or select a text with the mouse and press [PREFIX] Ctrl-y to copy it.
# Paste by pressing [PREFIX] Ctrl-p
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip >/dev/null"
bind-key p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"
bind-key C-y run "tmux show-buffer | xclip -sel clip -i >/dev/null"
bind C-p run "tmux set-buffer \"$(xclip -o -sel clip)\"; tmux paste-buffer"

# Set default terminal
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",*256col*:Tc"

set-window-option -g xterm-keys "on"

# As of TMUX 2.7, this workaround is needed so that st doesn't send S-Up when
# S-Down is pressed
set -as terminal-overrides ',st*:kind@:kri@'

# easy-to-remember split pane commands
bind-key | split-window -h
bind-key - split-window -v
unbind-key '"'
unbind-key %

# resize panes with vim movement keys
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# tabs like urxvt
bind-key -n S-Down new-window
bind-key -n S-Left prev
bind-key -n S-Right next
bind-key -n M-Left swap-window -t -1
bind-key -n M-Right swap-window -t +1

# Let the user pick the name of a window, and keep it
set -g set-titles on
set -g set-titles-string "Terminal"
set-option -g allow-rename off

# TMUX VIM integration
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# Use PREFIX C-l to clear screen
bind-key C-l send-keys 'C-l'

#### COLOR (Papercolor)
#run-shell "$HOME/.tmux/themes/nord-tmux/nord.tmux"
run-shell "$HOME/.tmux/themes/papercolor-tmux/papercolor-light.tmux"
